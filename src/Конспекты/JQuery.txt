//                   #1
//      Базовые селекторы
// $ - обращение к элементу
$('#id') // Обращение по идентификатору (id) Элемент 1.
$('.class') // Обращение по классу .class Элементов может быть несколько
$('div') // Обращение по тегу
$('a#id') // Обращение к ссылке a с указанным идентификатором
$('a.active') // Обращение к ссылке a с классом active
$('*') // Обращение ко всем элементам

//                    #2
//      Взаимодействие с элементами
$('h2, p') // Первый, второй, третий и т.д.
$('h2 span') // outer и inner  - поиск по всем элементам находящимся в h2, включая несколько уровней вложенности, вернет все span внутри h2
$('h2 > span') // parent > child - поиск строго внутри h2, не опуская на более глубокие уровни вложенности
$('h2 + p') // prev + next - вернет первый тег <p> который стоит после тега <h2>.
$('h2 ~ p').css('border', '2px solid #000'); // prev ~ next - вернет все теги <p> которые стоят после тега <h2>.

//                    #3
//      Взаимодействия с элементами по атрибутам
$('a[download]').css('border', '1px solid red'); // Простой атрибут - вернет все элементы с атрибутом download.
$('a[href="http://ya.ru"]').css('border', '1px solid red'); // Полное соответсвие - вернет элемент у которого атрибут href полностью соответсвует указанному.
$('a[href!="http://ya.ru"]').css('border', '1px solid red'); // Полное несоответствие
$('a[href^="http"]').css('border', '1px solid red'); // Начинается с ...
$('a[href$=".com"]').css('border', '1px solid red'); // Заканчивается на ... 
$('a[href*="google"]').css('border', '1px solid red'); // Содержит ... 
$('a[data-target|="main"]').css('border', '1px solid red'); // Имеет префикс - ... 
$('a[href][download]').css('border', '1px solid red'); // Имеет одновременно несколько атрибутов 

//                    #4
//        Фильтры
//        Простые фильтры в jQuery
$('p:first').css('border', '1px solid red'); // Первый элемент
$('p:last').css('border', '1px solid red'); // Последний элемент
$('a:eq(2)').css('border', '1px solid red'); // Элемент под номером ... (нумерация с 0)
$('*:not(h2,p)').css('border', '1px solid red'); // Исключает из найденных элементов selector
$('li:odd').css('border', '1px solid red'); // Четные найденные элементы
$('li:even').css('border', '1px solid red'); // Нечетные найденные элементы
$('li:gt(0)').css('border', '1px solid red'); // Элементы чей порядковый номер больше n
$('li:lt(3)').css('border', '1px solid red'); // Элементы чей порядковый номер меньше n
$('*:header').css('border', '1px solid red'); // Только те элементы, которые являются заголовками
$('li:animated').css('border', '1px solid red'); // Только те элементы, которые задействованы в анимации
$('li:hidden').css('border', '1px solid red'); // Скрытые элементы
$('li:visible').css('border', '1px solid red'); // Видимые элементы
$('li:lang(ru)').css('border', '1px solid red'); // Фильтрация по языку

//                    #5
//          Фильтры по содержимому в jQuery

$('li:contains(файл)').css('border', 'solid 1px red'); // содержит текст
$('p:empty').text('Любой текст');  // пустой
$('h2:has(span)').css('border', '1px solid #000'); // имеет внутри селектор
$('span:parent').css('border', '1px solid #000'); // обращение к родителю, выделит span который имеет родителя

//                    #6
//          Фильтры форм в jQuery
$('input').css('border', '1px solid red'); // Все поля input 
$('input:button').css('border', '1px solid red'); // Поле button - простая кнопка
$('input:radio').css('display', 'block'); // Радио-кнопки 
$('input:checkbox').css('display', 'block'); // Чекбоксы
$('input:text').css('border', '1px solid red');// Текстовые поля для ввода
$('input:password').css('border', '1px solid red'); // Поле для ввода пароля
$('input:file').css('border', '1px solid red'); // Поле для загрузки файла
$('input:submit').css('border', '1px solid red'); // Кнопка "Отправить"
$('input:reset').css('border', '1px solid red'); // Кнопка "Сбросить"
$('input:image').css('border', '1px solid red'); // Кнопка-картинка 
$('input:focus').css('display', 'block'); // Выбранное поле (состояние фокус)
$('input:checked').css('border', '1px solid red'); // Выбранный чекбокс или радио-кнопка
$('input:enabled').css('border', '1px solid red'); // Доступное поле
$('input:disabled').css('border', '1px solid red'); // Недоступное поле

//                    #7
//          События, связанные с мышью
// $('button').click(function() {
// 	console.log('Ты кликнул на кнопку');
// }); // Клик мышью

// $('button').dblclick(function() {
// 	console.log('Ты кликнул на кнопку дважды');
// }); // Двойной клик мышью

// $('ul li').mouseenter(function(event) {
// 	$(this).css('color', 'red');
// }); // Наведение мыши на элемент

$('ul li').mousedown(function(event) {
	$(this).css('color', 'red');
}); // Момент нажатия кнопки мыши

$('ul li').mouseup(function(event) {
	$(this).css('color', '#333');
}); // Момент "отжатия" кнопки мыши :)

$('ul li').mouseover(function(event) {
	$(this).css('color', 'blue');
});  // Мышь наезжает на площадь элемента

$('ul li').mouseout(function(event) {
	$(this).css('color', 'black');
}); // Мышь покидает площадь элемента

$('ul li').mousemove(function(event) {
	$(this).toggleClass('blue');
}); // Движение мыши над элементом

//                    #8
//          События клавиатуры
$('input').keydown(function(event) {
  console.log($(this).val())
}); // Клавиша в нажатом состоянии

$('input').keyup(function(event) {
  $('p').text($(this).val())
}); // Клавиша больше не в нажатом состоянии

$('input').keypress(function(eventObject) {
  console.log(eventObject.which)
}); // Ввод символа с клавиатуры 

