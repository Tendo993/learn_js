Настройка git

git config --global user.name 'tendo993' 
      - установить глобально имя пользователя

git config --global user.email 'tendo993@gmail.com'
      - установить глобально email пользователя

git config --list 
      - посмотреть настройки

git config --global core.autocrlf true
      - установить окончание строки(используется при работе с windows)

/Users/tendo993/Desktop/Education/NewJS/project1/src

Работа с репозиторием

git init 
      - инициализация репозитория 

git status
      - проверка статуса репозитория

git add index.html
      - добавить файл index.html к отслеживаемым файлам

git add .
      - добавить все файлы в корневом каталоге к отслеживаемым

git commit -m 'Добавить файлы в слепок'
      - делает слепок всех отслеживаемых файлов

git commit -a -m 'Новый коммит'
      - коммит с функцией git add .

git diff 
      - просмотреть были внесены изменения после последнего коммита

git log
      - Просмотреть историю коммитов, каждый коммит имеет: хэш(нужен для откатов или просмотра коммита), автора коммита, дату и время коммита, описание коммита

git log --oneline
      - Более удобный для чтения вид логов

git log --oneline --all
      - посмотреть все коммиты во всех ветках отсортированные по дате в порядке убывания

it log --oneline --all
      - посмотреть все коммиты во всех ветках отсортированные по дате в порядке убывания, отображаться коммиты будут в виде древа.

git show хэш
      - Просмотреть какие изменения были в коммите, хэш которого указан при вызове
git checkout
      - позволяет сделать откат файлов в проекте, можно указать какие файлы нужно откатить, до какого коммита нужно сделать откат. Если хэх коммита не указывался и файлы не были указаны- откат будет для всех измененных файлов до последнего коммита. Сначала указывается хэш, после указываются файлы.

git checkout master
      - вернуться к последнему коммиту(можно вернуться даже после отката к самому первому коммиту)

Работа с ветками

git checkout -b имя
      - создание новой ветки

git checkout -b имя хэш
      - создать новую ветку основываясь на коммите хэш которого был указан

git checkout master
      - перейти в ветку master

git push origin master
      - отправить в ветку origin github-репозиторий ветку master(репозитория рабочей машины)



Создание новой ветки в репозитории и коммит в новую ветку на github

git checkout -b new_branch
git commit -a -m 'created ne branch'
git push origin new_branch



Выгрузка проекта на github

1) Регистрация на сайте github.com
2) Создание репозитория
3) git remote add origin git@github.com:Tendo993/learn_js.git - предоставление доступа к удаленному репозиторию по указанному адресу
4) git push -u origin master - отправить проект на github



Клонирование репозитория с github на окмпьютер

git clone ссылка на репозиторий
      - Копирует ветку master с репозитория github

git pull origin new_branch
      - Обновить файлы(и скачать новые) из ветки new_branch с репозитория github